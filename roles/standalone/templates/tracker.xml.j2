<?xml version="1.0"?>
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">

<!--
This is the Jetty configuration file for the tracker server. It will set up
the server and the webapp context needed to deploy a working tracker.
Not much configuration should be needed here, apart from a few file
locations. I'd not recommend doing SSL, for example, because it's easier
and better to use a maintained reverse proxy such as nginx to handle SSL,
where it'll get system updates.
-->

<Configure id="Server" class="org.eclipse.jetty.server.Server">

    <New id="httpConfig" class="org.eclipse.jetty.server.HttpConfiguration">
      <Set name="outputBufferSize">32768</Set>
      <Set name="requestHeaderSize">8192</Set>
      <Set name="responseHeaderSize">8192</Set>

      <Call name="addCustomizer">
        <Arg><New class="org.eclipse.jetty.server.ForwardedRequestCustomizer"/></Arg>
      </Call>
    </New>

  <!-- Fairly awful configuration of the class list -->
	<Call name="setServerDefault" class="org.eclipse.jetty.webapp.Configuration$ClassList">
		<Arg><Ref refid="Server" /></Arg>
		<Call name="addAfter">
			<Arg>org.eclipse.jetty.webapp.FragmentConfiguration</Arg>
			<Arg>
				<Array type="java.lang.String">
					<Item>org.eclipse.jetty.plus.webapp.EnvConfiguration</Item>
					<Item>org.eclipse.jetty.plus.webapp.PlusConfiguration</Item>
				</Array>
			</Arg>
		</Call>
	</Call>

    <Call name="addConnector">
      <Arg>
        <New class="org.eclipse.jetty.server.ServerConnector">
          <Arg name="server"><Ref refid="Server" /></Arg>
          <Arg name="factories">
            <Array type="org.eclipse.jetty.server.ConnectionFactory">
              <Item>
                <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                  <Arg name="config"><Ref refid="httpConfig" /></Arg>
                </New>
              </Item>
            </Array>
          </Arg>
          <Set name="port"><Property name="jetty.port" default="3000"/></Set>
        </New>
      </Arg>
    </Call>

    <New id="webapp" class="org.eclipse.jetty.webapp.WebAppContext">
		<Set name="contextPath">/</Set>

		<!-- The scratch directory -->

		<New class="java.io.File">
			<Arg><Call class="java.lang.System" name="getProperty"><Arg>java.io.tmpdir</Arg></Call></Arg>
			<Call name="toString" id="tempDir" />
		</New>
		<New id="scratchDir" class="java.io.File">
			<Arg><Ref refid="tempDir"/></Arg>
			<Arg type="java.lang.String">embedded-jetty-jsp</Arg>
			<Call name="mkdirs"></Call>
		</New>
		<Call name="setAttribute">
			<Arg>javax.servlet.context.tempdir</Arg>
			<Arg><Ref refid="scratchDir" /></Arg>
		</Call>

		<!-- Configure the webapp -->
		<Call name="setAttribute">
			<Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
			<Arg type="java.lang.String">.*/[^/]*servlet-api-[^/]*\.jar$|.*/javax.servlet.jsp.jstl-.*\.jar$|.*/.*taglibs.*\.jar$</Arg>
		</Call>

		<Call name="setAttribute">
			<Arg>org.apache.tomcat.InstanceManager</Arg>
			<Arg><New class="org.apache.tomcat.SimpleInstanceManager" /></Arg>
		</Call>

    <Call name="addOverrideDescriptor">
      <Arg type="java.lang.String">file://{{webapp_service_config}}/override-web.xml</Arg>
    </Call>

		<Call name="addBean">
			<Arg>
				<New class="org.eclipse.jetty.annotations.ServletContainerInitializersStarter">
					<Arg><Ref refid="webapp" /></Arg>
				</New>
			</Arg>
			<Arg type="boolean">true</Arg>
		</Call>

		<Call name="setWar">
			<Arg>{{webapp_directory}}/tracker-webapp-{{tracker_version}}.war</Arg>
		</Call>

		<!-- Add the JSP initializer -->
		<!--          context.setAttribute("org.eclipse.jetty.containerInitializers", jspInitializers());
		 -->
		<Call name="setAttribute">
			<Arg>org.eclipse.jetty.containerInitializers</Arg>
			<Arg>
				<New class="java.util.ArrayList">
			    	<Call name="add">
			    		<Arg>
				    	    <New class="org.eclipse.jetty.plus.annotation.ContainerInitializer">
				    			<Arg><New class="org.eclipse.jetty.apache.jsp.JettyJasperInitializer"></New></Arg>
				    			<Arg><Array type="java.lang.Class"></Array></Arg>
				    		</New>
			    		</Arg>
			    	</Call>
			    </New>
			</Arg>
		</Call>

		<Call name="forName" class="java.lang.Class">
			<Arg>ca.uhnresearch.pughlab.tracker.server.httpd.EmbeddedJettyServer</Arg>
			<Call name="getClassLoader" id="serverClassloader" />
		</Call>

	    <!-- Initialize the classloader -->
	    <Call name="setClassLoader">
	       	<Arg>
	        	<New class="org.eclipse.jetty.webapp.WebAppClassLoader">
	                <Arg><Ref refid="serverClassloader" /></Arg>
	                <Arg><Ref refid="webapp" /></Arg>
	            </New>
            </Arg>
	    </Call>

		<!-- The data source -->
    <!-- This is injected through JNDI -->
	    <New id="ds" class="org.eclipse.jetty.plus.jndi.Resource">
	        <Arg><Ref refid="webapp"/></Arg>
	        <Arg>jdbc/TrackerDB</Arg>
	        <Arg>
	            <New class="org.apache.commons.dbcp.BasicDataSource">
	                <Set name="driverClassName">com.mysql.jdbc.Driver</Set>
	                <Set name="url">jdbc:mysql://{{mysql_database_host}}:{{mysql_database_port}}/{{mysql_database_name}}?sessionVariables=sql_mode='ansi,strict_all_tables'</Set>
	                <Set name="username">{{mysql_database_user}}</Set>
	                <Set name="password">{{mysql_database_password}}</Set>
                    <Set name="testOnBorrow">true</Set>
                    <Set name="validationQuery">SELECT 1</Set>
                    <Set name="timeBetweenEvictionRunsMillis">120000</Set>
                    <Set name="minEvictableIdleTimeMillis">120000</Set>
	            </New>
	        </Arg>
	    </New>
    </New>

    <New class="org.eclipse.jetty.plus.jndi.EnvEntry">
        <Arg>trackerProperties</Arg>
        <Arg type="java.lang.String">file://{{webapp_directory}}/tracker.properties</Arg>
        <Arg type="boolean">true</Arg>
    </New>

    <New class="org.eclipse.jetty.plus.jndi.EnvEntry">
        <Arg>trackerScript</Arg>
        <Arg type="java.lang.String">file://{{webapp_directory}}/tracker.js</Arg>
        <Arg type="boolean">true</Arg>
    </New>

    <Set name="handler"><Ref refid="webapp"/></Set>

    <Call class="org.eclipse.jetty.util.log.Log" name="getRootLogger">
        <Call name="setDebugEnabled">
            <Arg type="boolean">true</Arg>
        </Call>
    </Call>

</Configure>
